name: Nightly release the up-to-date container from node image on dockerhub following cli releases.

on:
  workflow_dispatch:
  schedule:
    #Everyday at around 4:00 UTC (not using exact hours helps with runners availability)
    - cron: '02 4 * * *'

env:
  executable-name: 'scalingo'
  executable-archive-name-pattern: 'scalingo_RELEASE_TAG_VERSION_linux_386'
  executable-archive-extention: 'tar.gz'
  target-repository: 'scalingo/cli'
  target-dockerhub-registry: 'rcambonie/scalingo-cli-node'

jobs:
  dynamic-variables:
    name: Generate variables used in the following jobs from the environment variables and secrets.
    runs-on: ubuntu-latest

    outputs:
      executable-name: ${{ steps.executable-name.outputs.value }}
      executable-archive-name: ${{ steps.executable-archive-name.outputs.value }}
      executable-archive-extention: ${{ steps.executable-archive-extention.outputs.value }}
      target-repository: ${{ steps.target-repository.outputs.value }}
      target-dockerhub-registry: ${{ steps.target-dockerhub-registry.outputs.value }}
      is-discord-hooked: ${{ steps.is-discord-hooked.outputs.value }}

    steps:
      - name: Executable archive name with replaced release version tag
        id: executable-archive-name
        #'Simple' variable replacement. We use the bash replace syntax as it is the default shell on github runners
        run: |
          EXECUTABLE_ARCHIVE_NAME=${{ env.executable-archive-name-pattern }}
          RELEASE_TAG_VERSION=${{ needs.get-release-version.outputs.release-tag-version }}
          EXECUTABLE_ARCHIVE_NAME=${EXECUTABLE_ARCHIVE_NAME//RELEASE_TAG_VERSION/"$RELEASE_TAG_VERSION"}     
          echo "::set-output name=value::$EXECUTABLE_ARCHIVE_NAME"

      - name: Executable name from environment variable
        id: executable-name
        run: |
          EXECUTABLE_NAME=${{ env.executable-name }}
          echo "::set-output name=value::$EXECUTABLE_NAME"

      - name: Executable archive file extention from environment variable
        id: executable-archive-extention
        run: |
          EXECUTABLE_ARCHIVE_EXTENTION=${{ env.executable-archive-extention }}
          echo "::set-output name=value::$EXECUTABLE_ARCHIVE_EXTENTION"

      - name: Target repository from environment variable
        id: target-repository
        run: |
          TARGET_REPOSITORY=${{ env.target-repository }}
          echo "::set-output name=value::$TARGET_REPOSITORY"

      - name: Target repository fully qualified name
        id: target-dockerhub-registry
        run: |
          TARGET_DOCKERHUB_REPOSITORY=${{ env.target-dockerhub-registry }}
          echo "::set-output name=value::$TARGET_DOCKERHUB_REPOSITORY"

      - name: Has a discord webhook for notification been defined
        id: is-discord-hooked
        run: |
          IS_HOOKED=${{ secrets.DISCORD_NOTIFY_HOOK_URL != '' }}
          echo "::set-output name=value::$IS_HOOKED"

  get-release-version:
    needs:
      - dynamic-variables
    uses: ./.github/workflows/_get-release-version.reusable.yml
    with:
      target-dockerhub-registry: ${{ needs.dynamic-variables.outputs.target-dockerhub-registry }}
      target-repository: ${{ needs.dynamic-variables.outputs.target-repository }}

  build-and-release-to-dockerhub:
    #Skipped if the tag is already present in the target registry
    if: ${{ needs.get-release-version.outputs.tag-already-exist-on-registry == 0  }}
    needs:
      - dynamic-variables
      - get-release-version
    uses: ./.github/workflows/_build-and-release-to-dockerhub.reusable.yml
    with:
      from-image: node:lts-alpine
      release-tag-version: ${{ needs.get-release-version.outputs.release-tag-version }}
      target-repository: ${{ needs.dynamic-variables.outputs.target-repository }}
      executable-archive-name: ${{ needs.dynamic-variables.outputs.executable-archive-name }}
      executable-archive-extention: ${{ needs.dynamic-variables.outputs.executable-archive-extention }}
      executable-name: ${{ needs.dynamic-variables.outputs.executable-name }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  notify-discord:
    name: Discord Notification
    if: ${{ needs.dynamic-variables.outputs.is-discord-hooked == 'true' }}
    needs:
      - build-and-release-to-dockerhub

    uses: ./.github/workflows/_notify-deployment.discord.reusable.yml
    with:
      application-full-name: ${{ needs.dynamic-variables.outputs.target-dockerhub-registry }}
      tag-version: ${{ needs.get-release-version.outputs.release-tag-version }}
    secrets:
      DISCORD_NOTIFY_HOOK_URL: ${{ secrets.DISCORD_NOTIFY_HOOK_URL }}