name: Reusable get latest release version from github repository
on:
  workflow_call:
    inputs:
      target-dockerhub-registry:
        required: true
        type: string
      target-repository:
        required: true
        type: string

    outputs:
      release-tag-version:
        description: 'The release version of the target repository'
        value: ${{ jobs.get-release-version.outputs.release-tag-version }}
      tag-already-exist-on-registry:
        description: 'A corresponding image with this tag version is already on dockerhub'
        value: ${{ jobs.get-release-version.outputs.tag-already-exist-on-registry }}

jobs:
  get-release-version:
    name: Get target executable latest release version and check if a tag with the same value exist on the dockerhub registry.
    runs-on: ubuntu-latest
    outputs:
      release-tag-version: ${{ steps.latest-release-info.outputs.tag-version }}
      tag-already-exist-on-registry: ${{ steps.latest-release-info.outputs.tag-already-exist-on-registry }}

    steps:
      - name: Get target release version and check if a tag with the same value exist on the dockerhub registry
        id: latest-release-info
        run: |
          RELEASE_TAG_VERSION=$(curl --silent "https://api.github.com/repos/${{ inputs.target-repository }}/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
          echo $RELEASE_TAG_VERSION
          set +e
          SAME_TAG_ALREADY_EXIST_ON_REGISTRY=$(curl --silent "https://registry.hub.docker.com/v2/repositories/${{ inputs.target-dockerhub-registry }}/tags" | grep -c "\"$RELEASE_TAG_VERSION\"")
          echo $SAME_TAG_ALREADY_EXIST_ON_REGISTRY
          set -e
          echo "::set-output name=tag-version::$RELEASE_TAG_VERSION"
          echo "::set-output name=tag-already-exist-on-registry::$SAME_TAG_ALREADY_EXIST_ON_REGISTRY"